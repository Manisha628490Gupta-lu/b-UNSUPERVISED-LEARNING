Unsupervised learning is a branch of machine learning that deals with unlabeled data. Unlike supervised learning, where the data is labeled with a specific category or outcome, unsupervised learning algorithms are tasked with finding patterns and relationships within the data without any prior knowledge of the data’s meaning. This makes unsupervised learning a powerful tool for exploratory data analysis, where the goal is to understand the underlying structure of the data.

Unsupervised Learning Algorithms
There are mainly 3 types of Algorithms which are used for Unsupervised dataset.

a) Clustering
b) Association Rule Learning
c) Dimensionality Reduction

a)Clustering: Clustering in unsupervised machine learning is the process of grouping unlabeled data into clusters based on their similarities. The goal of clustering is to identify patterns and relationships in the data without any prior knowledge of the data’s meaning.
Broadly this technique is applied to group data based on different patterns, such as similarities or differences, our machine model finds. These algorithms are used to process raw, unclassified data objects into groups. For example, in the above figure, we have not given output parameter values, so this technique will be used to group clients based on the input parameters provided by our data.


Types of clustering
K-means Clustering: Partitioning Data into K Clusters
Hierarchical Clustering: Building a Hierarchical Structure of Clusters
Density-Based Clustering (DBSCAN): Identifying Clusters Based on Density
Mean-Shift Clustering: Finding Clusters Based on Mode Seeking
Spectral Clustering: Utilizing Spectral Graph Theory for Clustering

K-means clustering :K-Means Clustering is an Unsupervised Machine Learning algorithm, which groups the unlabeled dataset into different clusters. The article aims to explore the fundamentals and working of k mean clustering along with the implementation.


Example:
import matplotlib.pyplot as plt
from sklearn.datasets import make_blobs
X,y = make_blobs(n_samples = 500,n_features = 2,centers = 3,random_state = 23)
 fig = plt.figure(0)
plt.grid(True)
plt.scatter(X[:,0],X[:,1])
plt.show()
